version:  '3.7'
services:
{% if cookiecutter.notebooks == 'y' %}
## this is for working with dask; uncomment if needed
#  scheduler:
#    context: ./notebooks
#    dockerfile: Dockerfile
#    #image: daskdev/dask
#    hostname: dask-scheduler
#    ports:
#      - "8786:8786"
#      - "8787:8787"
#    command: ["dask-scheduler"]
#
#  worker:
#    context: ./notebooks
#    dockerfile: Dockerfile
#    #image: daskdev/dask
#    volumes:
#        - ./data:/home/jovyan/work/datasets
#        - ./notebooks:/home/jovyan/work/notebooks
#        - ${LOCAL_MODULES}:/home/jovyan/work/modules
#    hostname: dask-worker
#    command: ["dask-worker", "tcp://scheduler:8786"]
  {{cookiecutter.project_slug}}-notebooks:
      build:
        context: ./notebooks
        dockerfile: Dockerfile
      volumes:
        - ./data:/home/jovyan/work/datasets
        - ./notebooks:/home/jovyan/work/notebooks
        - /opt/ssl-certs/jupyter:/etc/ssl/notebook
      ports:
        - 8888:8888
      container_name: {{cookiecutter.project_slug}}_jupyter_notebook
      command: "start-notebook.sh \
        --NotebookApp.token=''"
    #   environment:
    #         - DASK_SCHEDULER_ADDRESS="tcp://scheduler:8786"
      #extra_hosts:
      #  - "mymachine:<your_ip>"
{% endif %}
{% if cookiecutter.module == 'y' %}
  {{ cookiecutter.repo_name }}:
    # Makefile fills PROJECT_NAME to current directory name.
    # add UID to allow multiple users run this in parallel
    container_name: {{cookiecutter.repo_name}}_4000
    hostname: {{cookiecutter.repo_name}}
    ports:
        - 8000:8000
    # These variables are passed into the container.
    environment:
        - UID=4000
        - PROJECT_PATH=/home/nodummy/{{cookiecutter.repo_name}}
        - MODULE_NAME={{cookiecutter.repo_name}}
    env_file:
        - .env
    # Run with user priviliges by default.
    user: nodummy
    image: {{cookiecutter.repo_name}}:nodummy
    build:
        context: .
        # Build for current user.
        target: user
        dockerfile: Dockerfile
        # These variables are passed to Dockerfile.
        args:
        - HOST_UID=4000
        - HOST_USER=nodummy
    # Run container as a service. Replace with something useful.
    command: ["tail", "-f", "/dev/null"]
    tty: true
    volumes:
        - .:/home/nodummy/projects/{{cookiecutter.repo_name}}
{% endif %}
{% if cookiecutter.airflow_setup == 'y' %}
  {{ cookiecutter.repo_name }}-postgres:
    container_name: {{ cookiecutter.repo_name }}-postgres
    image: postgres
    environment:
        - POSTGRES_USER=airflow
        - POSTGRES_PASSWORD=airflow
        - POSTGRES_DB=airflow
  {{ cookiecutter.repo_name }}-scheduler:
    container_name: {{ cookiecutter.repo_name }}-scheduler
    image: apache/airflow
    command: scheduler
    depends_on:
        - {{ cookiecutter.repo_name }}-postgres
    env_file:
        - .env
    volumes:
        - ./airflow/dags:/opt/airflow/dags
  {{ cookiecutter.repo_name }}-webserver:
    container_name: {{ cookiecutter.repo_name }}-webserver
    image: apache/airflow
    entrypoint: ./scripts/entrypoint.sh
    depends_on:
        - {{ cookiecutter.repo_name }}-postgres
        - {{ cookiecutter.repo_name }}-scheduler
    env_file:
        - .env
    volumes:
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/scripts:/opt/airflow/scripts
    ports:
        - "8080:8080"

{% endif %}
